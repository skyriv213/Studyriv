Maven / Gradle

Maven
자바용 프로젝트 관리 도구
아파치 라이선스로 배포가 되는 오픈소스 소프트웨어
-> 프로젝트를 진행하면서 사용할 수 있는 수 많은 라이브러리들을 관리해주는 도구
-> 사용하는 라이브러리와 연결관계의 라이브러리까지 다 연동이 되어 관리가 된다.
-> 네트워크를 통해서 연관이 된 라이브러리까지 같이 업데이트를 해주기에 
	과거처럼 수동으로 업데이트를 연결시켜주지않아도 된다.

Gradle
Groovy를 이용한 빌드 자동화 시스템
Groovy와 유사한 도메인 언어를 채용, 현재 안드로이드 앱을 만드는데 필요한 안드로이드 스튜디오의
공식 빌드 시스템이다.
Java, C/C++, Python등의 여러가지 언어를 지원을 해준다.
---------------------------------------------------------------------------------------------------------
Groovy
java 가상머신에서 실행이 되는 스크립트 언어. 
자바와 마찬가지로 소스코드를 작성하고 가상머신에서 동작하지만 java와 달리 소스 코드를 컴파일 
할 필요 없다. java와 호환이 되며 대체적으로 모든면이 java와 가깝기에 Java를 보다 사용하기 쉽게 
사용할 수 있으며 이는 Groovy를 자바의 한 방면이라고 생각할 수도 있다.
이러한 Groovy를 사용하고 실행하는 것이 바로 Gradle이다.
----------------------------------------------------------------------------------------------------------

Maven의 경우 XML기반의 필드처리를 작성한다. 간단한 내용이라면 상관없지만 복잡한 내용으로 진행이
되면 XML기반의 묘사는 상당히 자원을 소모한다. Java프로그래머일 경우, 빌드 관리만을 위해 다른 언어를 
사용하지 않으면 안된다는 점에서도 하나의 의문을 품게 한다.
다만 Gradle일경우 Java와 유사하기에 비슷한 코드를 사용하여 빌드처리를 관리할 수 있게해주며
이러한 점이 수많은 Java 프로그래머들이 Gradle로 넘어가게 된 이유가 되기도 하다.

**
XML(eXtensible Markup Language)
W3C에서 개발이 된 다른 특수한 목적을 갖는 마크업 언어를 만드는데 사용하도록 권장하는 다목적 
마크업 언어.
데이터 형식으로 유니코드를 사용해 전 세계 언어를 지원한다.

----------------------------------------------------------------------------------------------------------
Maven / Gradle
초기에는 Maven의 점유율이 높았지만 Gradle의 점유율 추격은 빨라지고 있다.
또한 Gradle이 조금 더 빠른 성능과 간결한 설정으로 인지도와 인기도는 더불어 성장중이다.
소규모의 경우에는 Maven을 사용해도 무방하지만 대규모 프로젝트의 경우 Gradle을 사용하는게
더욱 유리하다고한다.
